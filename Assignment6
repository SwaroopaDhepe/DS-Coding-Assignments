PROBLEM STATEMENT: 
Coffee Shop Line (Simple Queue):
Arrival: Customers arrive at the coffee shop and stand in line. 
Order Processing: The first customer in line gets their order taken,
and the barista starts making the coffee.Serving: Once the first 
customer is served, they leave the queue, and the next customer in line
moves forward to be served. Write a program to implement a simple queue*/

#include<iostream>
#define N 10
using namespace std;
class CoffeeShop{
private:
    string queue[N];
    int front, rear;
public:
    CoffeeShop(){
        front=0;
        rear=-1;
    }
//Adding new customers
    void insert(string name){
        if(rear == N - 1){
            cout<<"Queue is FULL!\n";
            return;
        }
        queue[++rear]=name;
        cout<<name<<" joined the line.\n";
    }
//Serving the customer
    void deleteCustomer(){
        if(front > rear){
            cout<<"Queue is EMPTY!\n";
            return;
        }
        cout<<queue[front]<<"'s order is ready. They leave the line.\n";
        front++;
    }
//Showing the queue
    void show(){
        if(front > rear){
            cout<<"No customers in line.\n";
            return;
        }
        cout<<"Current Line: ";
        for(int i = front; i <= rear; i++){
            cout<<queue[i];
            if(i < rear){
                cout<<" -> ";  }
        } cout<<"\n";  }
};
int main(){
    CoffeeShop coffeeQueue;
    int choice;
    string name;
    do{
        cout<<"\n--- Coffee Shop Queue Menu ---\n";
        cout<< "1. New Customer Arrival (Insert)\n";
        cout<<"2. Serve Customer (Delete)\n";
        cout<<"3. Show Queue\n";
        cout<<"4. Exit\n";
        cout<<"Choose an option: ";
        cin>>choice;
        switch(choice){
            case 1:
                cout<<"Enter customer name: ";
                cin>>ws;
                getline(cin, name);
                coffeeQueue.insert(name);
                break;
            case 2:
                coffeeQueue.deleteCustomer();
                break;
            case 3:
                coffeeQueue.show();
                break;
            case 4:
                cout<<"Exiting...\n";
                break;
            default:
                cout<<"Invalid option!\n";
        }
    } while(choice != 4);
    return 0; }
